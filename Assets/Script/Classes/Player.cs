//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------ ^
using System;

namespace Gexx2DPaperTanks
{
	public interface IPlayer
	{
		string Name { get; set;}
		string TankModel { get; set; }
		string Flag { get; set; }
		string Rank { get; set; }
		bool isAI { get; set; }
		bool isNetPlayer { get; set; }
		float AILevel { get; set; }
		enumBoardSide Side { get; set; }
	}

	//	Сторона доски
	public enum enumBoardSide
	{
		Left = 1,
		Right = 2,
	}
	public class Player	: IPlayer
	{

		public struct PlayerStatistic
		{
			public int RandomRoundWins;
			public int RandomRoundPlayed;
			public float RandomAccuracy;
			public float RandomAvgFireTurn;

			public int NetworkRoundWins;
			public int NetworkRoundPlayed;
			public float NetworkAccuracy;
			public float NetworkAvgFireTurn;

			public string GetRandomStatistic()
			{
				return "In RANDOM: " + Environment.NewLine +
					"Round wins ....... " + RandomRoundWins + Environment.NewLine +
					"Round played ....... " + RandomRoundPlayed + Environment.NewLine +
					"Accuracy ....... " + RandomAccuracy + Environment.NewLine +
					"AvgFireTurn ....... " + RandomAvgFireTurn;
			}

			public string GetNetworkStatistic()
			{
				return "In NetWORK: " + Environment.NewLine +
					"Round wins ....... " + NetworkRoundWins + Environment.NewLine +
					"Round played ....... " + NetworkRoundPlayed + Environment.NewLine +
					"Accuracy ....... " + NetworkAccuracy + Environment.NewLine +
					"AvgFireTurn ....... " + NetworkAvgFireTurn;
			}

		}

		public string Name { get; set;}
		public string TankModel { get; set; }
		public string Flag { get; set; }
		public string Rank { get; set; }
		public bool isAI { get; set; }		//	Искустыенный интелект
		public bool isNetPlayer { get; set; }
		public float AILevel { get; set; }
		public enumBoardSide Side { get; set; }

		private PlayerStatistic _plStat;

		public Player ()
		{
			AILevel = 1f;
		}

		public Player(string name, bool isai, bool isnet)
		{
			AILevel = 1f;

			Name = name;
			this.isAI = isai;
			this.isNetPlayer = isnet;
		}

		public PlayerStatistic Statistic
		{
			get { return _plStat;}
			set { _plStat = value;}
		}
	}

	/// <summary>
	/// Текущий игрок
	/// </summary>
	internal class CurrentPlayer : Player
	{
		public CurrentPlayer()
		{

		}

		public string Password;
	}
}

